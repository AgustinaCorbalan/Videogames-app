{"version":3,"sources":["components/LandingPage/index.jsx","actions/index.js","components/Home/index.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["landingPage","to","getGames","dispatch","a","axios","get","response","type","payload","data","Home","useDispatch","allGames","useSelector","state","videogames","console","log","useEffect","onClick","e","preventDefault","handleOnClick","value","map","name","image","genre","App","className","exact","path","component","LandingPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","genres","reducer","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAGe,SAASA,IACpB,OACI,gCAEI,+DACA,cAAC,IAAD,CAAMC,GAAK,QAAX,SACI,4D,sDCPT,SAASC,IACd,8CAAO,WAAgBC,GAAhB,eAAAC,EAAA,sEACgBC,IAAMC,IAAI,0CAD1B,OACDC,EADC,OAELJ,EAAS,CACPK,KAAM,YACNC,QAASF,EAASG,OAJf,2CAAP,sDCGa,SAASC,IAEpB,IAAMR,EAAWS,cAEXC,EAAWC,aAAa,SAACC,GAAD,OAAWA,EAAMC,cAc/C,OAbAC,QAAQC,IAAIL,GAGZM,qBAAU,WAENhB,EAASD,OACX,CAACC,IAQA,gCACG,cAAC,IAAD,CAAMF,GAAI,cAAV,2BACA,kDACA,wBAAQmB,QAAU,SAACC,IATzB,SAAuBA,GACnBA,EAAEC,iBACFnB,EAASD,KAOmBqB,CAAcF,IAAxC,2BAGA,gCACI,mCACI,wBAAQG,MAAO,MAAf,uBACA,wBAAQA,MAAO,OAAf,2BAEJ,mCACI,wBAAQA,MAAO,MAAf,oBACA,wBAAQA,MAAO,SAAf,sBACA,wBAAQA,MAAO,QAAf,oBACA,wBAAQA,MAAO,YAAf,uBACA,wBAAQA,MAAO,MAAf,mBACA,wBAAQA,MAAO,WAAf,2BAED,mCACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAO,UAAf,qBACA,wBAAQA,MAAO,MAAf,2BAGAX,GAAYA,EAASY,KAAI,SAACJ,GACVA,EAAEK,KAAaL,EAAEM,MAAcN,EAAEO,e,WCjCvDC,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWtB,UCAxBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCPRQ,EAAe,CACnB5B,WAAY,GACZ6B,OAAQ,IAyBKC,MAtBf,WAAgD,IAA/B/B,EAA8B,uDAAtB6B,EAAcG,EAAQ,uCAC7C,OAAQA,EAAOvC,MACb,IAAK,YACH,OAAO,2BACFO,GADL,IAEEC,WAAY+B,EAAOtC,UAEvB,IAAK,aACH,OAAO,2BACFM,GADL,IAEE8B,OAAQE,EAAOtC,UAEnB,IAAK,YACH,OAAO,2BACFM,GADL,IAEEC,WAAY+B,EAAOtC,UAEvB,QACE,OAAOM,I,QCjBEiC,EAFDC,YAAYC,EAAaC,YAAgBC,MCKvDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.572fc3b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function landingPage(){ \r\n    return(\r\n        <div>\r\n            \r\n            <h1> WELCOME TO THE LANDING PAGE </h1>\r\n            <Link to = '/home'>\r\n                <button> GO ðŸŽ® </button> \r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport function getGames() {\r\n  return async function (dispatch) {\r\n    var response = await axios.get(\"http://localhost:3001/videogames?name=\");\r\n    dispatch({\r\n      type: \"GET_GAMES\",\r\n      payload: response.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getGenres() {\r\n  return async function (dispatch) {\r\n    var response = await axios.get(\"http://localhost:3001/genre\");\r\n    dispatch({\r\n      type: \"GET_GENRES\",\r\n      payload: response.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getNames(name) {\r\n  return async function (dispatch) {\r\n    try {\r\n      var response = await axios.get(\r\n        \"http://localhost:3001/videogames?name=\" + name\r\n      );\r\n      dispatch({\r\n        type: \"GET_NAMES\",\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getGames } from '../../actions/index';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from './card';\r\n\r\nexport default function Home(){\r\n\r\n    const dispatch = useDispatch() // es lo mismo que mapDispatch, despacha la action\r\n\r\n    const allGames = useSelector ((state) => state.videogames) // es lo mismo que mapStateToProps, con useSelec guarda en allGames todo el state de videogames\r\n    console.log(allGames);\r\n    \r\n\r\n    useEffect(() => { // es lo mismo que mapDispatch, despacha la action, que me va a traer todos los juegos\r\n        // useEffect equivale a los tres ciclos de vida del componente. apenas se monta el componente renderiza los juegos.\r\n        dispatch(getGames()); \r\n    },[dispatch]) // evita un loop infinito, (dependecias)\r\n  \r\n    function handleOnClick(e){\r\n        e.preventDefault();\r\n        dispatch(getGames())\r\n    }\r\n     \r\n    return(\r\n       <div>\r\n          <Link to= '/videogames'> Create Game </Link>\r\n          <h1> VIDEOGAMES !!! </h1>\r\n          <button onClick={ (e) => {handleOnClick(e)}}>\r\n              CARGAR JUEGOS\r\n          </button>\r\n          <div>\r\n              <select>\r\n                  <option value= 'asc' >Ascending</option>\r\n                  <option value= 'desc' >Descending</option>\r\n              </select>\r\n              <select>\r\n                  <option value= 'All' >Genres</option>\r\n                  <option value= \"Action\"> Action </option>\r\n                  <option value= 'Indie' > Indie</option>\r\n                  <option value= 'Adventure' >Adventure</option>\r\n                  <option value= 'RPG' > RPG </option>\r\n                  <option value= 'Strategy' > Strategy </option>\r\n                 </select>\r\n                 <select>\r\n                     <option value='All'>All</option>\r\n                     <option value= 'created'>Created</option>\r\n                     <option value= 'api'> Existente</option>\r\n                 </select>\r\n                 {\r\n                     allGames && allGames.map((e)=>{ // le pregunto si hay AllGames, (tiene el estado global con todos los juegos) y desp por cada juego le paso un card con cada prop que quiero renderizar\r\n                         <Card name={e.name} image={e.image} genre={e.genre}/>\r\n                     })\r\n                 }\r\n          </div>\r\n       </div>\r\n    )\r\n\r\n\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport LandingPage from \"./components/LandingPage/index\";\nimport Home from \"./components/Home/index\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <NavBar /> */}\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  videogames: [],\r\n  genres: [],\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_GAMES\":\r\n      return {\r\n        ...state,\r\n        videogames: action.payload, // en el state videogames, manda todo lo que mande la action GET_GAMES\r\n      };\r\n    case \"GET_GENRES\":\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      };\r\n    case \"GET_NAMES\":\r\n      return {\r\n        ...state,\r\n        videogames: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducer/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}